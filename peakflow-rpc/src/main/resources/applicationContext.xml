<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		"
	   default-lazy-init="true">
	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:annotation-config/>

	<context:component-scan base-package="com.jt" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 资金库 -->
	<!-- MyBatis配置 -->
	<bean id="coreSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="coreDataSource" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"/>
		<!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="org.snaker.engine.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" >
			<array>
				<value>classpath:/mapper/*.xml</value>
			</array>
		</property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="coreTransactionManager">
		<tx:attributes>
			<tx:method name="start*" propagation="REQUIRED"/>
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="assign*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="complete*" propagation="REQUIRED" />
			<tx:method name="finish*" propagation="REQUIRED" />
			<tx:method name="terminate*" propagation="REQUIRED" />
			<tx:method name="take*" propagation="REQUIRED" />
			<tx:method name="deploy*" propagation="REQUIRED" />
			<tx:method name="undeploy*" propagation="REQUIRED" />
			<tx:method name="redeploy*" propagation="REQUIRED" />

			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- or execution(* org.snaker.framework.flow.service..*.*(..))

	 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* org.snaker.engine.core..*.*(..))"/>
	</aop:config>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="coreTransactionManager" proxy-target-class="true" />

	<bean id="coreTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="coreDataSource" />
		<qualifier value="hexin-core" />
	</bean>
	<!-- 资金库 -->

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true" />


	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.properties" />

		<bean id="coreDataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${core.jdbc.driver}" />
			<property name="url" value="${core.jdbc.url}" />
			<property name="username" value="${core.jdbc.username}" />
			<property name="password" value="${core.jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="1" />
			<property name="minIdle" value="1" />
			<property name="maxActive" value="20" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />

			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
		</bean>
	</beans>

</beans>
